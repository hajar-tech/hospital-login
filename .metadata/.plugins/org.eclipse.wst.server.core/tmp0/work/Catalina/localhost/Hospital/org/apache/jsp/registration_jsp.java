/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-01 16:04:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Inscription - MediCare</title>\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n");
      out.write("        <h2 class=\"text-2xl font-bold text-center text-gray-800 mb-6\">Inscription</h2>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"registration\" method=\"post\" class=\"space-y-4\">\r\n");
      out.write("            <!-- Nom Complet -->\r\n");
      out.write("            <div>\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Nom Complet:</label>\r\n");
      out.write("                <input type=\"text\" name=\"fullName\" required\r\n");
      out.write("                    class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Email -->\r\n");
      out.write("            <div>\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Email:</label>\r\n");
      out.write("               \r\n");
      out.write("                     <input type=\"email\" name=\"email\" required pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\r\n");
      out.write("                        class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Mot de Passe -->\r\n");
      out.write("            <div>\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Mot de Passe:</label>\r\n");
      out.write("                <input type=\"password\" name=\"password\" required minlength=\"8\"\r\n");
      out.write("                    class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Numéro de Téléphone -->\r\n");
      out.write("            <div>\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Numéro de Téléphone:</label>\r\n");
      out.write("              \r\n");
      out.write("                      <input type=\"tel\" name=\"phoneNumber\" required\r\n");
      out.write("                         class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Rôle -->\r\n");
      out.write("            <div>\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Rôle:</label>\r\n");
      out.write("                <select name=\"role\" id=\"role\" onchange=\"toggleSpeciality()\"\r\n");
      out.write("                    class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("                    <option value=\"PATIENT\">PATIENT</option>\r\n");
      out.write("                    <option value=\"DOCTOR\">DOCTOR</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Spécialisation (caché par défaut) -->\r\n");
      out.write("            <div id=\"specialityField\" class=\"hidden\">\r\n");
      out.write("                <label class=\"block text-gray-700 font-semibold\">Spécialisation:</label>\r\n");
      out.write("                <input type=\"text\" name=\"speciality\"\r\n");
      out.write("                    class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Bouton d'inscription -->\r\n");
      out.write("            <div class=\"text-center\">\r\n");
      out.write("                <button type=\"submit\"\r\n");
      out.write("                    class=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow-md transition duration-300\">\r\n");
      out.write("                    S'inscrire\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function toggleSpeciality() {\r\n");
      out.write("            var role = document.getElementById(\"role\").value;\r\n");
      out.write("            var specialityField = document.getElementById(\"specialityField\");\r\n");
      out.write("            specialityField.classList.toggle(\"hidden\", role !== \"DOCTOR\");\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
